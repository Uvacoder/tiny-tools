.Grid {
  border-left: var(--border);
  border-top: var(--border);
  display: grid;
  grid-template-columns: repeat(12, 1fr);

  & > * {
    border-right: var(--border);
    border-bottom: var(--border);
  }
}

.Grid--ratio,
.Grid--letterspacer,
.Grid--about {
  // height: 100%;
  grid-template-rows: repeat(12, 1fr);
}

.Grid--easing {
  --colspan: 2;
  grid-template-columns: repeat(var(--colspan), 1fr);
  min-height: 100%; 
  align-content: start;
  grid-auto-rows: 1fr;

  // adds an invisible pseudo-element to the grid that is forced to a 
  // square aspect ratio with padding-bottom and placed in the first grid slot
  &::before {
    content: "";
    width: 0;
    padding-bottom: 100%;
    grid-row: 1 / 1;
    grid-column: 1 / 1;
  }

  // then force the first child of the grid to occupy the "same" space as
  // the zero width pseudo-element

  & > *:first-child {
    grid-row: 1 / 1;
    grid-column: 1 / 1;
  }

  @media (min-width: 480px) {
    --padding: 32px;
    --colspan: 3;
  }

  @media (min-width: 1280px) {
    --colspan: 4;
  }
}